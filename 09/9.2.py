# 1
def find_lines_len_more_6(path: str) -> int:
    counter = 0
    with open(path, encoding="utf-8") as file:
        for line in file:
            if len(line.rstrip()) > 6:
                counter += 1
    return counter


# 2
words = {
    "IN": 11,
    "AT": 10,
    "NULLA": 10,
    "AC": 9,
    "SIT": 8,
    "AMET": 8,
    "PELLENTESQUE": 8,
    "SED": 7,
    "A": 6,
    "MASSA": 6,
    "QUIS": 6,
    "NUNC": 6,
    "ET": 6,
    "VEL": 6,
    "TEMPOR": 6,
    "MAURIS": 6,
    "CONGUE": 6,
    "EU": 6,
    "SEMPER": 6,
    "ELIT": 5,
    "CRAS": 5,
    "EX": 5,
    "ANTE": 5,
    "SAPIEN": 5,
    "MORBI": 5,
    "FRINGILLA": 5,
    "ULLAMCORPER": 5,
    "VITAE": 5,
    "NON": 5,
    "VULPUTATE": 5,
    "EFFICITUR": 5,
    "NIBH": 5,
    "EGET": 5,
    "QUAM": 5,
    "DONEC": 5,
    "FELIS": 5,
    "TINCIDUNT": 5,
    "IPSUM": 4,
    "MI": 4,
    "ALIQUAM": 4,
    "INTERDUM": 4,
    "AUGUE": 4,
    "MAGNA": 4,
    "CURSUS": 4,
    "CONSEQUAT": 4,
    "DIAM": 4,
    "TORTOR": 4,
    "QUISQUE": 4,
    "PULVINAR": 4,
    "VESTIBULUM": 4,
    "LEO": 4,
    "CONVALLIS": 4,
    "LIBERO": 4,
    "ELEMENTUM": 4,
    "MAECENAS": 4,
    "LIGULA": 4,
    "PHASELLUS": 4,
    "ARCU": 4,
    "EST": 4,
    "RUTRUM": 4,
    "UT": 4,
    "LOREM": 3,
    "SOLLICITUDIN": 3,
    "GRAVIDA": 3,
    "BIBENDUM": 3,
    "ULTRICIES": 3,
    "PURUS": 3,
    "PLACERAT": 3,
    "VELIT": 3,
    "FAUCIBUS": 3,
    "RISUS": 3,
    "SUSCIPIT": 3,
    "METUS": 3,
    "IACULIS": 3,
    "SODALES": 3,
    "TEMPUS": 3,
    "CURABITUR": 3,
    "VOLUTPAT": 3,
    "MALESUADA": 3,
    "POSUERE": 3,
    "TURPIS": 3,
    "URNA": 3,
    "EROS": 3,
    "LAOREET": 3,
    "DIGNISSIM": 3,
    "DUIS": 3,
    "BLANDIT": 3,
    "ALIQUET": 3,
    "LACUS": 3,
    "EGESTAS": 3,
    "LACINIA": 3,
    "DOLOR": 2,
    "CONSECTETUR": 2,
    "EUISMOD": 2,
    "NISL": 2,
    "JUSTO": 2,
    "ELEIFEND": 2,
    "ENIM": 2,
    "ETIAM": 2,
    "FINIBUS": 2,
    "NAM": 2,
    "MOLLIS": 2,
    "SCELERISQUE": 2,
    "PRAESENT": 2,
    "VEHICULA": 2,
    "ACCUMSAN": 2,
    "LUCTUS": 2,
    "HENDRERIT": 2,
    "ID": 2,
    "ODIO": 2,
    "MATTIS": 2,
    "NISI": 2,
    "ADIPISCING": 1,
    "LOBORTIS": 1,
    "FUSCE": 1,
    "ERAT": 1,
    "FACILISI": 1,
    "NEC": 1,
    "DICTUM": 1,
    "PHARETRA": 1,
    "SAGITTIS": 1,
    "LECTUS": 1,
    "VIVAMUS": 1,
    "INTEGER": 1,
    "PRETIUM": 1,
    "VIVERRA": 1,
    "RHONCUS": 1,
    "MAXIMUS": 1,
    "COMMODO": 1,
    "FACILISIS": 1,
    "NEQUE": 1,
    "PORTTITOR": 1,
    "VARIUS": 1,
    "ULTRICES": 1,
    "TELLUS": 1,
    "HABITANT": 1,
    "TRISTIQUE": 1,
    "SENECTUS": 1,
    "NETUS": 1,
    "FAMES": 1,
    "DAPIBUS": 1,
    "MOLESTIE": 1,
    "NULLAM": 1,
}


# 3
unique_words_in_uppercase = set[str]()
with open("./words.txt", encoding="utf-8") as file:
    for line in file:
        uppercase_word = line.rstrip().upper()
        if uppercase_word.endswith("ЕЯ"):
            unique_words_in_uppercase.add(uppercase_word)
print(*sorted(unique_words_in_uppercase, key=lambda word: (len(word), word)), sep="\n")
